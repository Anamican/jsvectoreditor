<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="VectorEditor">
    <!-- <Require feature="wave-preview" /> -->
    <Require feature="rpc" /> 

  </ModulePrefs>
  <Content type="html">
    <![CDATA[     
       <script src="http://antimatter15.com/misc/wave/pygowave.js"></script>
        <script type="text/javascript" src="http://jsvectoreditor.googlecode.com/svn/trunk/raphael.js"></script>
        <script type="text/javascript" src="http://jsvectoreditor.googlecode.com/svn/trunk/editor.js"></script>
        <script type="text/javascript" src="http://jsvectoreditor.googlecode.com/svn/trunk/shape.js"></script>
        <script type="text/javascript" src="http://jsvectoreditor.googlecode.com/svn/trunk/tracker.js"></script>
       
         <div id="canvas" style="background-color: #d3d3d3; position: absolute;top:0;left:0; width: 100%; height: 100%; top: 0px; left: 0px"></div>

  <div style="position: absolute; top: 10px; left: 10px;">
    <button onclick="editor.setMode('select')">Select</button>
    <button onclick="editor.setMode('select+')">Select+</button>
    <button onclick="editor.setMode('rect')">Rect</button>
    <button onclick="editor.setMode('line')">Line</button>
    <button onclick="editor.setMode('ellipse')">Ellipse</button>
    <button onclick="editor.setMode('path')">Path</button>
    <button onclick="editor.setMode('polygon')">Polygon</button>
    <button onclick="editor.setMode('image')">Image</button>
    <button onclick="editor.setMode('text')">Text</button>
    <button onclick="editor.setMode('delete')">Delete</button>
    <button onclick="alert(editor.getMarkup())">Markup</button>
    <br>

    <span>Fill:</span> 
    <select id="fillcolor" onchange="setFillColor(this);" style="background-color:red"> 
      <option style="background-color:red;" value="red"></option> 
      <option style="background-color:blue;" value="blue"></option> 
      <option style="background-color:green;" value="green"></option> 
      <option style="background-color:yellow;" value="yellow"></option> 
      <option style="background-color:aqua;" value="aqua"></option> 
      <option style="background-color:white;" value="white">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option> 
    </select> 
    <select id="fillopacity" onchange="setFillOpacity(this);"> 
      <option value="1">100%</option> 
      <option value=".90">90%</option> 
      <option value=".80">80%</option> 
      <option value=".70">70%</option> 
      <option value=".60">60%</option> 
      <option value=".50">50%</option> 
      <option value=".40">40%</option> 
      <option value=".30">30%</option> 
      <option value=".20">20%</option>
      <option value=".10">10%</option>  
    </select> 
    <span>Stroke:</span> 
    <select id="strokecolor" onchange="setStrokeColor(this);" style="background-color:black"> 
      <option style="background-color:black;" value="black"></option> 
      <option style="background-color:red;" value="red"></option> 
      <option style="background-color:blue;" value="blue"></option> 
      <option style="background-color:green;" value="green"></option> 
      <option style="background-color:yellow;" value="yellow"></option> 
      <option style="background-color:aqua;" value="aqua"></option> 
      <option style="background-color:white;" value="white">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option> 
    </select> 
    <select id="strokewidth" onchange="setStrokeWidth(this);"> 
      <option value="1px">1px</option> 
      <option value="2px">2px</option> 
      <option value="3px">3px</option> 
      <option value="4px">4px</option> 
      <option value="5px">5px</option> 
      <option value="6px">6px</option>
      <option value="7px">7px</option> 
      <option value="8px">8px</option> 
      <option value="9px">9px</option> 
      <option value="10px">10px</option>
    </select> 
    
    <select id="strokeopacity" onchange="setStrokeOpacity(this);"> 
      <option value="1">100%</option> 
      <option value=".90">90%</option> 
      <option value=".80">80%</option> 
      <option value=".70">70%</option> 
      <option value=".60">60%</option> 
      <option value=".50">50%</option> 
      <option value=".40">40%</option> 
      <option value=".30">30%</option> 
      <option value=".20">20%</option>
      <option value=".10">10%</option>  
    </select>
  </div>
  <script type="text/javascript">

    
  function setFillColor(colors) {
    var color = colors.options[colors.selectedIndex].value;
    colors.style.backgroundColor = color;
    
    editor.set("fill", color)
  }
  
  function setStrokeColor(colors) {
    var color = colors.options[colors.selectedIndex].value;
    colors.style.backgroundColor = color;
    editor.set("stroke", color)
  }
  
  function setStrokeWidth(widths) {
    var width = widths.options[widths.selectedIndex].value;
    editor.set("stroke-width",parseInt(width))
  }

  function setStrokeOpacity(widths) {
    var width = widths.options[widths.selectedIndex].value;
    editor.set("stroke-opacity",parseFloat(width))
  }
  
  function setFillOpacity(widths) {
    var width = widths.options[widths.selectedIndex].value;
    editor.set("fill-opacity",parseFloat(width))
  }

  function getOptionByValue(select, value)
  {
    for (var i=0; i<select.length; i++) {
      if (select.options[i].value == value) {
        return i;
      }
    }
    return -1;
  }

  </script>
 <script type="text/javascript">
  google.load("jquery", "1.3.2");
  var editor = null;

  function resetGadget(){
    var keys = wave.getState().getKeys()
    var state = {}
    for(var i = 0; i < keys.length; i++){
      state[keys[i]] = null;
    }
    wave.getState().submitDelta(state)
  }
  
  function index_of(value, array){
    return editor.index_of(value, array) //yayness for code reuse!
  }
  
  function get_subkeys(name){
    var allkeys = wave.getState().getKeys();
    var subkeys = []
    for(var i = 0; i < allkeys.length; i++){
      if(allkeys[i].indexOf(name) == 0){
        subkeys.push(name.substr(name.length))
      }
    }
    return subkeys
  }
  
  function wave_set(row, value){
    var delta = {}
    delta[row] = value;
    wave.getState().submitDelta(delta)
  }
  
  function is_locked(name){
    return index_of(name,get_subkeys("locked:")) != -1;
  }
  
  function lock_shape(name){
    wave_set("locked:"+name, true);
  }
  
  function unlock_shape(name){
    wave_set("locked:"+name, null); //delete
  }
  
  function stateChanged(){
    var keys = get_subkeys("data:");
    for(var i = 0; i < keys.length; i++){
      if(index_of(keys[i], editor.shapes) == -1){
        //if new shape
      }else{
        //if old shape
      }
      
    }
  }
  
  //stolen from an unreleased version of the ajax animator
  //which interestingly enough, I made. 
  //also the purpose of VectorEditor is for the ajax animator
  //so why am i citing myself?
  
  loadShape = function(shape, noattachlistener, instance){
    instance = instance?instance:Ax.canvas
    
	  var newshape = null, draw = instance.draw;
	  if(shape.type == "rect"){
	    newshape = draw.rect(0, 0,0, 0)
	  }else if(shape.type == "path"){
	    newshape = draw.path({})
	  }else if(shape.type == "image"){
      newshape = draw.image(shape.src, 0, 0, 0, 0)
    }else if(shape.type == "ellipse"){
      newshape = draw.ellipse(0, 0, 0, 0)
    }
	  if(newshape){
	    newshape.attr(shape)
	    newshape.id = shape.id
	    newshape.subtype = shape.subtype
	    
	        if (!noattachlistener) {
              //Ext.get(newshape).on("mousedown", Ax.canvas.onHit, Ax.canvas);
            instance.addShape(newshape)
          }
	  }

}

dumpshape = function(shape){
    //return Ax.canvas.info(shape)
    var info = {
      type: shape.type,
      id: shape.id,
      subtype: shape.subtype
    }
    var attr = "cx,cy,fill,fill-opacity,font,font-family,font-size,font-weight,gradient,height,opacity,path,r,rotation,rx,ry,scale,src,stroke,stroke-dasharray,stroke-opacity,stroke-width,width,x,y,".split(",")
    for(var i = 0; i < attr.length; i++){
      var tmp = shape.attr(attr[i]);
      if(tmp){
        info[attr[i]] = tmp
      }
    } 
    
    return info
}
  
  function init(){
    editor = new VectorEditor(document.getElementById("canvas"), $(window).width(),$(window).height());
    editor.draw.rect(100,100,480,272).attr("stroke-width", 0).attr("fill", "white")

    $(window).resize(function(){
      editor.draw.setSize($(window).width(),$(window).height())
    })
    
    editor.on("select", function(event,shape){
      
      if(is_locked(shape.id)){
        //oh noes! it's locked
        alert("Shape Locked!")
        return false
      }
      //if nobody's locked it
      lock_shape(shape.id)
      //shape.attr("")
    })
    
    editor.on("unselect", function(event, shape){
      unlock_shape(shape.id);
    })
    
    if(wave && wave.isInWaveContainer()){
      wave.setStateCallback(stateChanged)
    }
    
    
  }
  gadgets.util.registerOnLoadHandler(init);
  
 </script>

    ]]>
  </Content>
</Module>
